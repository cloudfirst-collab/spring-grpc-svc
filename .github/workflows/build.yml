name: Java CI with Maven

env:
  name: development

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -B package --file pom.xml
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
  test:
    name: Unit-Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Maven Package
        run: mvn -B clean package
      - name: Maven Verify
        run: mvn -B clean verify -DskipTests
  sonar:
    name: Code-Quality Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: SonarCloud Scan
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.coverage.jacoco.xmlReportPaths=./site/jacoco/jacoco.xml -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dsonar.projectKey=cloudfirst-collab_spring-grpc-svc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  artifact:
    name: Publish Artifact
    runs-on: ubuntu-latest
    needs: [test, sonar]
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Publish artifact on GitHub Packages
        run: mvn -B clean deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: [test,sonar,artifact]
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    steps:
      - uses: actions/checkout@v1
      - name: Docker Hub Sign-in
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Building Docker Image
        run: docker build -t $REPO:latest -t $REPO:${GITHUB_RUN_ID} .
      - name: Publish Docker Image
        run: docker push $REPO
